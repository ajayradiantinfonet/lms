# Generated by Django 3.1.1 on 2020-12-03 12:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityAdding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField()),
                ('activity_type', models.CharField(choices=[('chat', 'chat'), ('pdf', 'pdf'), ('question', 'question'), ('spin', 'spin')], max_length=255)),
                ('activity_name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=225)),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('category_type', models.CharField(choices=[('category', 'category'), ('subcategory', 'subcategory')], default='category', max_length=25)),
                ('category_image', models.ImageField(null=True, upload_to='category_images/')),
                ('category_about', models.CharField(max_length=125, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoriesHirerchy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ChatActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_user', models.CharField(max_length=225)),
                ('room', models.CharField(max_length=225, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ContentVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField()),
                ('video', models.FileField(upload_to='course_video/')),
                ('description', models.CharField(max_length=225)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseEnroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_registered', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_for', models.CharField(choices=[('for organization', 'for organization'), ('for end user', 'for end user')], default='for organization', max_length=30)),
                ('name', models.CharField(max_length=255)),
                ('about', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(null=True)),
                ('thumbnail', models.ImageField(default=None, upload_to='course_images/')),
                ('type', models.CharField(choices=[('course', 'course'), ('subtopic', 'subtopic')], default='course', max_length=10)),
                ('self_enrollment', models.BooleanField(default=True, null=True)),
                ('is_trial', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='CoursesEndUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('about', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('thumbnail', models.ImageField(default=None, upload_to='course_images/')),
                ('self_enrollment', models.BooleanField(default=True)),
                ('total_view', models.IntegerField(default=0)),
                ('web', models.BooleanField(default=True)),
                ('mobile', models.BooleanField(default=False)),
                ('price', models.FloatField(default=0)),
                ('discount_price', models.FloatField(blank=True, null=True)),
                ('duration', models.CharField(blank=True, help_text='In minutes', max_length=125, null=True)),
                ('language', multiselectfield.db.fields.MultiSelectField(choices=[('English', 'English'), ('Hindi', 'Hindi'), ('Marathi', 'Marathi'), ('Tamil', 'Tamil')], default='English', max_length=125)),
                ('overview', models.TextField(blank=True, null=True)),
                ('highlights', models.TextField(null=True)),
                ('post_achievement', models.TextField(null=True)),
                ('link', models.URLField(null=True)),
                ('star', models.CharField(max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FileActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='file_activity/')),
                ('description', models.CharField(max_length=125)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_name', models.CharField(max_length=125)),
                ('language_code', models.CharField(default=None, max_length=2, unique=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='LanguageCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('website', models.URLField(max_length=255, unique=True)),
                ('address', models.TextField()),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('no_of_candidates', models.IntegerField(blank=True, null=True)),
                ('company_logo', models.ImageField(upload_to='uploads/')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=10, unique=True)),
                ('password', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='PersonInRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layer_id', models.CharField(max_length=225)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField()),
                ('question_name', models.CharField(max_length=255, unique=True)),
                ('question_type', models.CharField(choices=[('radio', 'radio'), ('checkboxes', 'checkboxes'), ('text', 'text')], max_length=20)),
                ('option_a', models.CharField(max_length=200)),
                ('option_b', models.CharField(max_length=200)),
                ('option_c', models.CharField(max_length=200)),
                ('option_d', models.CharField(max_length=200)),
                ('answer_option', models.CharField(max_length=1)),
                ('answer_text', models.CharField(max_length=225)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpinActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField()),
                ('name', models.CharField(max_length=125)),
                ('no_of_topic', models.IntegerField()),
                ('block_slice_after_open', models.BooleanField(default=False)),
                ('activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='customadmin.activitycategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField()),
                ('name', models.CharField(max_length=255)),
                ('about', models.CharField(default=None, max_length=255)),
                ('thumbnail', models.ImageField(default=None, upload_to='topic_images/')),
                ('duration', models.CharField(default=None, max_length=20)),
                ('topic_type', models.CharField(choices=[('topic', 'topic'), ('subtopic', 'subtopic')], default='topic', max_length=10)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='course_topic', to='customadmin.courses')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='UserCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('category_about', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TopicRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_father', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_father', to='customadmin.topic')),
                ('topic_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='customadmin.topic')),
            ],
        ),
        migrations.CreateModel(
            name='TopicDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_name', models.CharField(max_length=125)),
                ('questions', models.ManyToManyField(related_name='topic_questions', to='customadmin.Question')),
            ],
        ),
        migrations.CreateModel(
            name='SubTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField()),
                ('name', models.CharField(max_length=125)),
                ('about', models.CharField(max_length=125)),
                ('duration', models.DurationField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_subtopic', to='customadmin.topic')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpinActivityEnroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enroll_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('spinactivity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customadmin.spinactivity')),
            ],
        ),
        migrations.CreateModel(
            name='SpinActivityAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_option', models.TextField(max_length=125)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customadmin.question')),
                ('spinactivity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customadmin.spinactivityenroll')),
            ],
        ),
        migrations.AddField(
            model_name='spinactivity',
            name='topic_details',
            field=models.ManyToManyField(related_name='topic_details', to='customadmin.TopicDetails'),
        ),
        migrations.CreateModel(
            name='SessionActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=125, null=True)),
                ('description', models.TextField()),
                ('duration', models.CharField(max_length=10)),
                ('auto_attendence', models.BooleanField(default=False)),
                ('photo_attendence', models.BooleanField(default=True)),
                ('record_session', models.BooleanField(default=False)),
                ('enable_private_chat', models.BooleanField(default=False)),
                ('enable_group_chat', models.BooleanField(default=False)),
                ('raise_query', models.BooleanField(default=False)),
                ('download_record_session_video', models.BooleanField(default=False)),
                ('download_session_resource', models.BooleanField(default=False)),
                ('capture_photo_after_every', models.CharField(max_length=5)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('mute_participant_upon_entry', models.BooleanField(default=False)),
                ('record_session_visibility_to_students', models.BooleanField(default=False)),
                ('display_description', models.BooleanField(default=False)),
                ('session_room_id', models.CharField(max_length=125, null=True, unique=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_session', to='customadmin.courses')),
            ],
        ),
    ]
